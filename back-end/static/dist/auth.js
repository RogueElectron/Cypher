import{g as F,O as x,a as $,K as B}from"./opaque_client.js";const O="modulepreload",M=function(o){return"/"+o},P={},D=function(n,e,d){let p=Promise.resolve();if(e&&e.length>0){let g=function(i){return Promise.all(i.map(u=>Promise.resolve(u).then(l=>({status:"fulfilled",value:l}),l=>({status:"rejected",reason:l}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),r=a?.nonce||a?.getAttribute("nonce");p=g(e.map(i=>{if(i=M(i),i in P)return;P[i]=!0;const u=i.endsWith(".css"),l=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${l}`))return;const c=document.createElement("link");if(c.rel=u?"stylesheet":O,u||(c.as="script"),c.crossOrigin="",c.href=i,r&&c.setAttribute("nonce",r),document.head.appendChild(c),u)return new Promise((h,v)=>{c.addEventListener("load",h),c.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${i}`)))})}))}function s(a){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=a,window.dispatchEvent(r),!r.defaultPrevented)throw a}return p.then(a=>{for(const r of a||[])r.status==="rejected"&&s(r.reason);return n().catch(s)})},T=F(x.OPAQUE_P256);function j(o){const e=`; ${document.cookie}`.split(`; ${o}=`);return e.length===2?e.pop().split(";").shift():null}const V=[{id:"input",icon:"bi-keyboard",title:"Password Input",description:"Your password is entered locally and never transmitted",dataFlow:null},{id:"validation",icon:"bi-check-circle",title:"Input Validation",description:"Validating credentials before starting authentication",dataFlow:null},{id:"ke1-generation",icon:"bi-cpu",title:"Generate KE1",description:"Creating first key exchange message without exposing password",dataFlow:null},{id:"send-ke1",icon:"bi-arrow-up-circle",title:"Send Authentication Request",description:"Sending KE1 message to server (no password data included)",dataFlow:"KE1 Message → Server"},{id:"server-ke2",icon:"bi-server",title:"Server Response",description:"Server generates KE2 using stored encrypted credentials",dataFlow:"KE2 Message ← Server"},{id:"verify-server",icon:"bi-shield-check",title:"Verify Server",description:"Authenticating server and generating session key locally",dataFlow:null},{id:"send-ke3",icon:"bi-arrow-up-circle",title:"Send Authentication Proof",description:"Sending KE3 proof to complete mutual authentication",dataFlow:"KE3 Proof → Server"},{id:"totp-verify",icon:"bi-shield-lock",title:"2FA Verification",description:"Verifying time-based authentication code",dataFlow:null},{id:"success",icon:"bi-check-circle-fill",title:"Authentication Complete",description:"Successfully authenticated with 2FA!",dataFlow:null}];class q{constructor(){this.steps=V,this.init()}init(){this.renderSteps()}renderSteps(){const n=document.getElementById("live-steps");n&&(n.innerHTML=this.steps.map((e,d)=>`
            <div class="live-step" id="step-${e.id}">
                <div class="step-icon">
                    <i class="${e.icon}"></i>
                </div>
                <div class="step-content">
                    <div class="step-title">${e.title}</div>
                    <div class="step-description">${e.description}</div>
                    ${e.dataFlow?`<div class="data-flow">${e.dataFlow}</div>`:""}
                </div>
            </div>
        `).join(""))}activateStep(n){const e=this.steps.findIndex(d=>d.id===n);this.steps.forEach((d,p)=>{const s=document.getElementById(`step-${d.id}`);s&&(s.className=s.className.replace(/\b(active|processing|completed)\b/g,"").trim(),p<e?s.classList.add("completed"):p===e&&s.classList.add("active"))})}completeStep(n){const e=document.getElementById(`step-${n}`);e&&(e.classList.remove("active","processing"),e.classList.add("completed"))}updateSecurityStatus(n,e="success"){const d=document.getElementById("security-status");if(d){const p=e==="success"?"bi-shield-check":"bi-shield-exclamation",s=e==="success"?"text-success":"text-warning";d.innerHTML=`
                <div class="d-flex align-items-center">
                    <i class="${p} ${s} me-2"></i>
                    <span class="text-white">${n}</span>
                </div>
            `}}}let t;function N(){const o=document.getElementById("hide-sidebar"),n=document.getElementById("show-sidebar"),e=document.getElementById("visualization-panel");o&&n&&e&&(o.addEventListener("click",()=>{e.classList.add("hidden"),n.style.display="block"}),n.addEventListener("click",()=>{e.classList.remove("hidden"),n.style.display="none"}))}function f(o,n="success"){const e=document.getElementById("alert-container"),d=n==="success"?"alert-success":"alert-danger",p=n==="success"?"bi-check-circle-fill":"bi-exclamation-triangle-fill";e.innerHTML=`
        <div class="alert ${d} alert-dismissible fade show" role="alert">
            <i class="${p} me-2"></i>
            ${o}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    `,n==="success"&&setTimeout(()=>{const s=e.querySelector(".alert");s&&new bootstrap.Alert(s).close()},5e3)}function A(){const o=document.getElementById("alert-container");o.innerHTML=""}document.addEventListener("DOMContentLoaded",async()=>{t=new q,N();const o=document.getElementById("login-form");o&&o.addEventListener("submit",async d=>{d.preventDefault(),A(),t.activateStep("input"),t.updateSecurityStatus("Password entered locally - never transmitted in plaintext");const p=new FormData(o),s=p.get("username"),a=p.get("password");if(!s||!a){f("Please fill in all fields!","error");return}t.activateStep("validation"),t.completeStep("validation");const r=o.querySelector('button[type="submit"]'),g=r.textContent;r.disabled=!0,r.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span>Logging in...';try{t.activateStep("ke1-generation"),t.updateSecurityStatus("Generating key exchange message without exposing password");const i=new $(T),l=(await i.authInit(a)).serialize();t.completeStep("ke1-generation"),t.activateStep("send-ke1"),t.updateSecurityStatus("Sending authentication request - no password data transmitted");const c=await fetch("http://localhost:3000/login/init",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({username:s,serke1:l})});if(!c.ok){const m=await c.json();throw new Error(m.error||"Login initialization failed")}t.completeStep("send-ke1"),t.activateStep("server-ke2"),t.updateSecurityStatus("Server responding with encrypted challenge using stored credentials");const v=(await c.json()).ser_ke2,I=B.deserialize(T,v);t.completeStep("server-ke2"),t.activateStep("verify-server"),t.updateSecurityStatus("Verifying server authenticity and generating session key");const w=await i.authFinish(I),C=w.ke3.serialize();console.log("session",w.session_key),t.completeStep("verify-server"),t.activateStep("send-ke3"),t.updateSecurityStatus("Sending authentication proof to complete mutual authentication");const b=await fetch("/api/create-token",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({username:s})}),E=await b.json();if(!b.ok||!E.token){f("Failed to create authentication token","error"),t.updateSecurityStatus("Token creation failed","error");return}const _=`pass_auth_token=${E.token}; Max-Age=180; SameSite=Lax; Path=/`;document.cookie=_;const y=await fetch("http://localhost:3000/login/finish",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({username:s,serke3:C})});if(!y.ok){const m=await y.json();throw new Error(m.error||"Login completion failed")}const L=await y.json();if(L.success){t.completeStep("send-ke3"),t.activateStep("totp-verify"),t.updateSecurityStatus("OPAQUE authentication complete! Now verifying 2FA..."),console.log("Switching to TOTP phase...");const m=document.getElementById("login-form"),S=document.getElementById("totp-phase"),k=document.getElementById("back-link");console.log("Elements found:",{loginForm:m,totpPhase:S,backLink:k}),m&&(m.style.display="none"),S&&(S.style.display="block"),k&&(k.style.display="none"),f("Password authentication successful! Please enter your 2FA code.","success")}else throw new Error(L.message||"Invalid credentials")}catch(i){console.error("Login error:",i);let u=i.message;i.message.includes("client not registered")?u="User not found. Please register first.":i.message.includes("Authentication failed")&&(u="Invalid username or password."),f(`Login failed: ${u}`,"error")}finally{r.disabled=!1,r.textContent=g}});const n=document.getElementById("totp-verify-form");n&&n.addEventListener("submit",async d=>{d.preventDefault(),A();const s=new FormData(n).get("totp_code");if(!s||s.length!==6){f("Please enter a valid 6-digit code!","error");return}const a=n.querySelector('button[type="submit"]'),r=a.innerHTML;a.disabled=!0,a.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span>verifying...';try{t.updateSecurityStatus("Verifying 2FA code...");const g=document.getElementById("username").value;if(!g)throw new Error("Username not found");const i=j("pass_auth_token");if(!i)throw new Error("Password authentication token not found or expired");const u=await fetch("http://localhost:3000/totp/verify-login",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({username:g,token:s,passAuthToken:i})}),l=await u.json();if(!u.ok||!l.success){const c=l.error||"Invalid TOTP code";f(`Login failed: ${c}`,"error"),t.updateSecurityStatus("TOTP verification failed. Please try again.","error");return}if(t.completeStep("totp-verify"),t.updateSecurityStatus("Authentication complete! Session tokens created."),l.access_token&&l.refresh_token){const{sessionManager:c}=await D(async()=>{const{sessionManager:h}=await import("./session-manager.js");return{sessionManager:h}},[]);c.setTokens(l.access_token,l.refresh_token,l.expires_in||900),document.cookie="pass_auth_token=; Max-Age=0; Path=/; SameSite=Lax"}f("Login successful! Welcome to Cypher.","success"),setTimeout(()=>{window.location.href="/"},1500)}finally{a.disabled=!1,a.innerHTML=r}});const e=document.getElementById("totp-code");e&&e.addEventListener("input",()=>{e.value=e.value.replace(/[^0-9]/g,""),e.value.length>6&&(e.value=e.value.slice(0,6))})});
