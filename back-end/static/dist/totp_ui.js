class m{constructor(){this.steps=[{id:"generate",title:"generate secret",description:"creating unique totp secret key",icon:"1"},{id:"qr-code",title:"display qr code",description:"showing scannable qr code",icon:"2"},{id:"scan",title:"scan with app",description:"user scans qr with authenticator",icon:"3"},{id:"verify",title:"verify code",description:"confirming totp code works",icon:"4"},{id:"complete",title:"2fa enabled",description:"account secured with 2fa",icon:"âœ“"}],this.init()}init(){const t=document.getElementById("live-steps");t&&(t.innerHTML=this.steps.map(e=>`
            <div class="live-step" id="step-${e.id}">
                <div class="step-icon">${e.icon}</div>
                <div class="step-content">
                    <div class="step-title">${e.title}</div>
                    <div class="step-description">${e.description}</div>
                </div>
            </div>
        `).join(""))}activateStep(t){const e=this.steps.findIndex(s=>s.id===t);this.steps.forEach((s,o)=>{const i=document.getElementById(`step-${s.id}`);i&&(i.className=i.className.replace(/\b(active|processing|completed)\b/g,"").trim(),o<e?i.classList.add("completed"):o===e&&i.classList.add("active"))})}setProcessing(t){const e=document.getElementById(`step-${t}`);e&&(e.classList.remove("active"),e.classList.add("processing"))}completeStep(t){const e=document.getElementById(`step-${t}`);e&&(e.classList.remove("active","processing"),e.classList.add("completed"))}updateSecurityStatus(t,e="success"){const s=document.getElementById("security-status");if(s){const o=e==="success"?"bi-shield-check text-success":e==="warning"?"bi-shield-exclamation text-warning":"bi-shield-x text-danger";s.innerHTML=`
                <div class="d-flex align-items-center">
                    <i class="${o} me-2" style="font-size: 14px;"></i>
                    <small class="text-white">${t}</small>
                </div>
            `}}}let c;function f(){const n=document.getElementById("hide-sidebar"),t=document.getElementById("show-sidebar"),e=document.getElementById("visualization-panel");n&&t&&e&&(n.addEventListener("click",()=>{e.classList.add("hidden"),t.style.display="block"}),t.addEventListener("click",()=>{e.classList.remove("hidden"),t.style.display="none"}))}function l(n,t="success"){const e=document.getElementById("alert-container"),s=t==="success"?"alert-success":"alert-danger",o=t==="success"?"bi-check-circle-fill":"bi-exclamation-triangle-fill";e.innerHTML=`
        <div class="alert ${s} alert-dismissible fade show" role="alert">
            <i class="${o} me-2"></i>
            ${n}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `,t==="success"&&setTimeout(()=>{const i=e.querySelector(".alert");i&&(i.classList.remove("show"),setTimeout(()=>i.remove(),150))},5e3)}function u(){const n=document.getElementById("alert-container");n.innerHTML=""}function p(n){n.value=n.value.replace(/[^0-9]/g,""),n.value.length>6&&(n.value=n.value.slice(0,6))}document.addEventListener("DOMContentLoaded",async()=>{c=new m,f(),document.querySelectorAll("#totp-code, #verify-code").forEach(s=>{s.addEventListener("input",()=>p(s)),s.addEventListener("paste",o=>{setTimeout(()=>p(s),0)})});const t=document.getElementById("totp-setup-form");t&&t.addEventListener("submit",async s=>{s.preventDefault(),u(),c.activateStep("generate"),c.updateSecurityStatus("generating unique totp secret...");const i=new FormData(t).get("totp_code");if(!i||i.length!==6){l("please enter a valid 6-digit code!","error");return}const a=t.querySelector('button[type="submit"]'),d=a.innerHTML;a.disabled=!0,a.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span>verifying...';try{c.activateStep("verify"),c.updateSecurityStatus("verifying totp code..."),await new Promise(r=>setTimeout(r,1e3)),c.activateStep("complete"),c.updateSecurityStatus("2fa successfully enabled for your account"),l("two-factor authentication enabled successfully!","success"),t.reset(),setTimeout(()=>{console.log("totp setup complete")},2e3)}catch(r){console.error("totp setup error:",r),l(`setup failed: ${r.message||"please try again"}`,"error")}finally{a.disabled=!1,a.innerHTML=d}});const e=document.getElementById("totp-verify-form");e&&e.addEventListener("submit",async s=>{s.preventDefault(),u();const i=new FormData(e).get("verify_code");if(!i||i.length!==6){l("please enter a valid 6-digit code!","error");return}const a=e.querySelector('button[type="submit"]'),d=a.innerHTML;a.disabled=!0,a.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span>verifying...';try{c.activateStep("verify"),c.updateSecurityStatus("verifying 2fa code..."),await new Promise(r=>setTimeout(r,800)),c.completeStep("verify"),c.updateSecurityStatus("code verified successfully"),l("verification successful!","success"),e.reset()}catch(r){console.error("totp verification error:",r),l(`verification failed: ${r.message||"invalid code"}`,"error")}finally{a.disabled=!1,a.innerHTML=d}}),c.activateStep("generate"),c.updateSecurityStatus("ready to set up two-factor authentication")});
