import{g as I,O,a as C,R as F}from"./opaque_client.js";const S=I(O.OPAQUE_P256),k=[{id:"input",title:"Password Input",description:"Your password is entered locally and never transmitted",icon:"bi-keyboard",dataFlow:null},{id:"validation",title:"Input Validation",description:"Validating password strength and confirmation",icon:"bi-check-circle",dataFlow:null},{id:"generate-keys",title:"Generate Keys",description:"Creating cryptographic keypair for secure registration",icon:"bi-cpu",dataFlow:null},{id:"registration-request",title:"Registration Request",description:"Sending encrypted registration data to server",icon:"bi-arrow-up-circle",dataFlow:"Registration Request → Server"},{id:"server-response",title:"Server Response",description:"Server processing registration with OPAQUE protocol",icon:"bi-server",dataFlow:"Registration Response ← Server"},{id:"finalize",title:"Finalize Registration",description:"Completing OPAQUE protocol and storing credentials",icon:"bi-shield-check",dataFlow:null},{id:"totp-setup",title:"2FA Setup",description:"Configuring time-based authentication",icon:"bi-shield-lock",dataFlow:null},{id:"totp-verify",title:"Verify 2FA",description:"Confirming TOTP code functionality",icon:"bi-check-circle-fill",dataFlow:null},{id:"success",title:"Registration Complete",description:"Account created successfully with 2FA enabled",icon:"bi-check-circle-fill",dataFlow:null}];class x{constructor(){this.steps=k,this.init()}init(){this.renderSteps()}renderSteps(){const t=document.getElementById("live-steps");t&&(t.innerHTML=this.steps.map((s,a)=>`
            <div class="live-step" id="step-${s.id}">
                <div class="step-icon">
                    <i class="${s.icon}"></i>
                </div>
                <div class="step-content">
                    <div class="step-title">${s.title}</div>
                    <div class="step-description">${s.description}</div>
                    ${s.dataFlow?`<div class="data-flow">${s.dataFlow}</div>`:""}
                </div>
            </div>
        `).join(""))}activateStep(t){const s=this.steps.findIndex(a=>a.id===t);this.steps.forEach((a,c)=>{const i=document.getElementById(`step-${a.id}`);i&&(i.className=i.className.replace(/\b(active|processing|completed)\b/g,"").trim(),c<s?i.classList.add("completed"):c===s&&i.classList.add("active"))})}completeStep(t){const s=document.getElementById(`step-${t}`);s&&(s.classList.remove("active","processing"),s.classList.add("completed"))}updateSecurityStatus(t,s="success"){const a=document.getElementById("security-status");if(a){const c=s==="success"?"bi-shield-check":"bi-shield-exclamation",i=s==="success"?"text-success":"text-warning";a.innerHTML=`
                <div class="d-flex align-items-center">
                    <i class="${c} ${i} me-2"></i>
                    <span class="text-white">${t}</span>
                </div>
            `}}}let e;function A(){const r=document.getElementById("hide-sidebar"),t=document.getElementById("show-sidebar"),s=document.getElementById("visualization-panel");r&&t&&s&&(r.addEventListener("click",()=>{s.classList.add("hidden"),t.style.display="block"}),t.addEventListener("click",()=>{s.classList.remove("hidden"),t.style.display="none"}))}function d(r,t="success",s="alert-container"){const a=document.getElementById(s);if(!a)return;const c=t==="success"?"alert-success":"alert-danger",i=t==="success"?"bi-check-circle-fill":"bi-exclamation-triangle-fill";a.innerHTML=`
        <div class="alert ${c} alert-dismissible fade show" role="alert">
            <i class="${i} me-2"></i>
            ${r}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    `,t==="success"&&setTimeout(()=>{const n=a.querySelector(".alert");n&&new bootstrap.Alert(n).close()},5e3)}function b(){const r=document.getElementById("alert-container");r&&(r.innerHTML="");const t=document.getElementById("totp-alert-container");t&&(t.innerHTML="")}function L(r,t){return r!==t?(d("Passwords do not match!","error"),!1):r.length<8?(d("Password must be at least 8 characters long!","error"),!1):!0}document.addEventListener("DOMContentLoaded",async()=>{e=new x,A();const r=document.getElementById("register-form");r&&r.addEventListener("submit",async n=>{n.preventDefault(),b(),e.activateStep("input"),e.updateSecurityStatus("Password entered locally - never transmitted in plaintext");const u=new FormData(r),o=u.get("username"),p=u.get("password"),g=u.get("confirm_password");if(!o||!p||!g){d("Please fill in all fields!","error");return}if(e.activateStep("validation"),!L(p,g))return;e.completeStep("validation");const l=r.querySelector('button[type="submit"]'),f=l.textContent;l.disabled=!0,l.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span>Registering...';try{e.activateStep("generate-keys"),e.updateSecurityStatus("Generating cryptographic blinding - your password stays secure");const m=new C(S),T=(await m.registerInit(p)).serialize();e.completeStep("generate-keys"),e.activateStep("registration-request"),e.updateSecurityStatus("Sending blinded password to server - original password never leaves this device");const y=await fetch("http://localhost:3000/register/init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o,registrationRequest:T})});if(!y.ok){const h=await y.json();throw new Error(h.error||"Registration failed")}e.completeStep("registration-request"),e.activateStep("server-response"),e.updateSecurityStatus("Server processing blinded password - your actual password remains unknown");const{registrationResponse:E}=await y.json(),P=F.deserialize(S,E);e.completeStep("server-response"),e.activateStep("finalize"),e.updateSecurityStatus("Creating your secure credential file locally");const R=(await m.registerFinish(P)).record.serialize();e.completeStep("finalize");const v=await fetch("http://localhost:3000/register/finish",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o,record:R})});if(!v.ok){const h=await v.json();throw new Error(h.error||"Registration completion failed")}if((await v.json()).success)e.activateStep("totp-setup"),e.updateSecurityStatus("OPAQUE registration complete! Now setting up 2FA..."),document.getElementById("register-form").parentElement.style.display="none",document.getElementById("totp-phase").style.display="block",document.getElementById("back-link").style.display="none",t(),d("OPAQUE registration successful! Please set up 2FA to complete registration.","success");else throw new Error("Registration failed - please try again")}catch(m){console.error("Registration error:",m),d(`Registration failed: ${m.message}`,"error")}finally{l.disabled=!1,l.textContent=f}});async function t(){try{const n=document.getElementById("username").value,u=await fetch("http://localhost:3000/totp/setup",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:n})});if(!u.ok)throw new Error("Failed to setup TOTP");const o=await u.json();return document.getElementById("totp-secret").textContent=o.secret,window.currentUsername=n,s(o.qrCode,o.otpauthUrl),o.secret,o.secret}catch(n){throw console.error("TOTP setup error:",n),d(`TOTP setup failed: ${n.message}`,"error"),n}}function s(n,u){const o=document.getElementById("qr-code");o.innerHTML=`
            <div class="text-center p-4" style="background: rgba(255,255,255,0.1); border-radius: 8px;">
                <div class="mb-3">
                    <img src="${n}" alt="TOTP QR Code" style="border-radius: 8px; max-width: 200px; max-height: 200px;">
                </div>
                <small class="text-secondary">Scan with Google Authenticator, Authy, or similar app</small>
                <div class="mt-2">
                    <small class="text-muted">Or copy this URI:</small>
                    <div class="mt-1">
                        <input type="text" class="form-control form-control-sm" value="${u}" readonly onclick="this.select()" style="font-size: 10px;">
                    </div>
                </div>
            </div>
        `}function a(n){}const c=document.getElementById("totp-verify-form");c&&c.addEventListener("submit",async n=>{n.preventDefault(),b();const o=new FormData(c).get("totp_code");if(!o||o.length!==6){d("Please enter a valid 6-digit code!","error");return}const p=c.querySelector('button[type="submit"]'),g=p.innerHTML;p.disabled=!0,p.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span>verifying...';try{e.activateStep("totp-verify"),e.updateSecurityStatus("Verifying 2FA code...");const l=window.currentUsername;if(!l){d("Username not found. Please restart registration.","error","totp-alert-container"),e.updateSecurityStatus("TOTP verification failed. Please restart registration.","error");return}const f=await fetch("http://localhost:3000/totp/verify-setup",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:l,token:o})}),m=await f.json();if(!f.ok||!m.success){const w=m.error||"Invalid TOTP code";d(`2FA verification failed: ${w}`,"error","totp-alert-container"),e.updateSecurityStatus("TOTP verification failed. Please try again.","error");return}e.activateStep("success"),e.updateSecurityStatus("Registration complete! Account secured with 2FA."),d("Registration complete! You can now log in with your credentials and 2FA.","success","totp-alert-container"),setTimeout(()=>{window.location.href="/api/login"},2e3)}catch(l){console.error("TOTP verification error:",l),d(`2FA verification failed: ${l.message||"Invalid code"}`,"error","totp-alert-container"),e.updateSecurityStatus("TOTP verification failed. Please try again.","error")}finally{p.disabled=!1,p.innerHTML=g}});const i=document.getElementById("totp-code");i&&i.addEventListener("input",()=>{i.value=i.value.replace(/[^0-9]/g,""),i.value.length>6&&(i.value=i.value.slice(0,6))})});
