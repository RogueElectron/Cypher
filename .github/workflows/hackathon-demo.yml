name: Hackathon Quick Demo

# Simplified workflow for quick hackathon demos
on:
  workflow_dispatch:
    inputs:
      demo_type:
        description: 'Demo type'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - registration-only
        - quick-test
      custom_username:
        description: 'Custom demo username'
        required: false
        default: 'hackathon_demo'

jobs:
  hackathon-demo:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Keep it fast for demos
    
    steps:
    - name: Setup Demo Environment
      uses: actions/checkout@v4
      
    - name: Quick Node.js Setup  
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Quick Python Setup
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Speed Install Dependencies
      run: |
        cd back-end
        
        # Install only essential dependencies
        pip install -r requirements.txt
        npm install
        
        cd node_internal_api
        npm install
        
        cd ../test
        npm install
        npx playwright install chromium --with-deps

    - name: Spin Up Services
      run: |
        cd back-end
        
        # Start databases with Docker Compose
        docker compose up -d postgres redis
        
        # Wait for services
        sleep 10
        
        # Setup environment
        cp .env.example .env
        mkdir -p .keys
        
        # Initialize database
        python migrations/init_db.py --all

    - name: Launch Demo
      run: |
        cd back-end
        
        # Start services in background
        cd node_internal_api && npm start &
        cd .. && python main.py &
        
        # Wait for startup
        sleep 15
        
        # Health checks
        curl -f http://localhost:3000/health || echo "Node API check failed"
        curl -f http://localhost:5000/ || echo "Flask check failed"
        
        # Run the demo automation
        cd test
        USERNAME="${{ github.event.inputs.custom_username }}_$(date +%s)"
        echo "Running hackathon demo for: $USERNAME"
        
        node demo-user-automation.js http://localhost:5000 "$USERNAME"

    - name: Demo Success Report
      if: success()
      run: |
        echo "# HACKATHON DEMO SUCCESS!"
        echo ""
        echo "**Full OPAQUE registration completed**"
        echo "**Zero-knowledge cryptography working**"
        echo "**2FA setup automated**"
        echo "**End-to-end flow validated**"
        echo ""
        echo "**Ready for hackathon presentation!**"
        echo ""
        echo "**Demo completed in under 10 minutes**"
        echo "**Timestamp:** $(date)"

    - name: Demo Failure Report  
      if: failure()
      run: |
        echo "Demo failed - check logs above"
        echo "This helps debug issues before hackathon!"
